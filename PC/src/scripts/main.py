################################################
##      AUTHOR : FAISAL FAZAL-UR-REHMAN       ##
################################################
# Main, software entry point for all PC python #
# scripts. This script initiates threads and   #
# rpiClient class, joins the threads and waits #
# for them to finish.                          #                    
################################################
##                    PC                      ##
################################################

import client
import connect4dqn as dqn
import rpiClient
import threading
import queue

SHUTDOWN_RPI_CODE = 147258          # This number is used through out the RoboCon software which tells each thread to exit cleanly

visionBoardQue = queue.Queue()      # Tells DQN when the opponent has played their turn
instructionQue = queue.Queue()      # Sends instructions to DQN, e.g. new game, shutdown, exit game etc
data2rpiQue = queue.Queue()         # Transfers action generated by DQN to the rpiClient to send it to control software on RPI
rpiTaskCompleteQue = queue.Queue()  # Used by rpiClient to tell DQN when the robot has completed the task


rpiC = rpiClient.RpiClient(1236,"ffr") # Initiate rpiClient, with RPI's username and port created by the server on RPI

#___define thread for C++ to/from python client, pass deques to allow comms between threads and tell it what thread routine to call 
clientThread = threading.Thread(target=client.RoboPyClient, args=(visionBoardQue,instructionQue))

#___define thread for DQN, pass deques to allow comms between threads and tell it what thread routine to call
dqnThread = threading.Thread(target=dqn.connect4player,args=(visionBoardQue,instructionQue,data2rpiQue,rpiTaskCompleteQue))

#___define thread for PC to/from RPI client, pass deques to allow comms between threads and tell it what thread routine to call
rpiClientThread = threading.Thread(target=rpiC.routine, args=(data2rpiQue,rpiTaskCompleteQue)) 

#___Begin threads_________
clientThread.start()    ##
dqnThread.start()       ##
rpiClientThread.start() ##
#-----------------------##

clientThread.join() # block and wait clientThread routine to finish

#___SHUTDOWN RPI SOCKETS___________##
data2rpiQue.put(SHUTDOWN_RPI_CODE) ##
rpiTaskCompleteQue.get()           ##
#####################################
